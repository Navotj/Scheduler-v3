name: clear terraform lock

on:
  workflow_dispatch: {}

defaults:
  run:
    shell: bash
    working-directory: infrastructure/terraform

jobs:
  clear-lock:
    runs-on: ubuntu-latest
    concurrency:
      group: clear-terraform-lock
      cancel-in-progress: false
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      APP_PREFIX: ${{ vars.APP_PREFIX }}
      TF_STATE_BUCKET: ${{ vars.APP_PREFIX }}-state-bucket
      TF_STATE_KEY: state/${{ vars.APP_PREFIX }}.tfstate
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.13.0"

      - name: detect lock id from s3 .tflock (if present)
        id: detect
        run: |
          set -euo pipefail
          if aws s3api head-object --bucket "${TF_STATE_BUCKET}" --key "${TF_STATE_KEY}.tflock" >/dev/null 2>&1; then
            aws s3 cp "s3://${TF_STATE_BUCKET}/${TF_STATE_KEY}.tflock" lock.json >/dev/null
            LOCK_ID="$(python3 -c 'import json,sys; print(json.load(open("lock.json")).get("ID",""))' || true)"
            if [ -n "${LOCK_ID}" ]; then
              echo "Found lock: ${LOCK_ID}"
              echo "lock_id=${LOCK_ID}" >> "$GITHUB_OUTPUT"
            else
              echo "Lock file found but no ID."
              echo "lock_id=" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "No .tflock object found."
            echo "lock_id=" >> "$GITHUB_OUTPUT"
          fi

      - name: terraform init (backend only)
        if: steps.detect.outputs.lock_id != ''
        run: |
          set -euo pipefail
          terraform init -input=false -no-color \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="key=${TF_STATE_KEY}" \
            -backend-config="region=${AWS_REGION}"

      - name: force unlock
        if: steps.detect.outputs.lock_id != ''
        run: |
          set -euo pipefail
          terraform force-unlock -force "${{ steps.detect.outputs.lock_id }}"

      - name: remove stale .tflock (best-effort)
        if: always()
        run: |
          set -euo pipefail
          if aws s3api head-object --bucket "${TF_STATE_BUCKET}" --key "${TF_STATE_KEY}.tflock" >/dev/null 2>&1; then
            aws s3 rm "s3://${TF_STATE_BUCKET}/${TF_STATE_KEY}.tflock" || true
          fi
          echo "done"
