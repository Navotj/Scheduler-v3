name: Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - "infrastructure/k8s/frontend/deployment.yaml"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1
  ACCOUNT_ID: "637423477802"
  ECR_REPO: "frontend"
  CLUSTER_NAME: "nat20-eks"
  NAMESPACE: "nat20"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (assume CI role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::637423477802:role/nat20-ci
          aws-region: ${{ env.AWS_REGION }}

      - name: Compute ECR_URI
        run: |
          echo "ECR_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}" >> "$GITHUB_ENV"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push image
        run: |
          set -euo pipefail
          docker build \
            -t "${ECR_URI}:${GITHUB_SHA}" \
            -t "${ECR_URI}:latest" \
            .
          docker push "${ECR_URI}:${GITHUB_SHA}"
          docker push "${ECR_URI}:latest"

      - name: Update kubeconfig
        run: |
          set -euo pipefail
          aws eks update-kubeconfig --name "${CLUSTER_NAME}" --region "${AWS_REGION}"

      - name: Apply Deployment (no placeholder tags)
        run: |
          set -euo pipefail
          kubectl -n "${NAMESPACE}" apply -f infrastructure/k8s/frontend/deployment.yaml

      - name: Set image to this commit
        run: |
          set -euo pipefail
          kubectl -n "${NAMESPACE}" set image deployment/frontend frontend="${ECR_URI}:${GITHUB_SHA}"

      - name: Rollout status
        run: |
          set -euo pipefail
          kubectl -n "${NAMESPACE}" rollout status deployment/frontend --timeout=180s

      - name: Debug on failure
        if: failure()
        run: |
          set -euo pipefail
          kubectl -n "${NAMESPACE}" get pods -o wide
          kubectl -n "${NAMESPACE}" describe deployment frontend
          kubectl -n "${NAMESPACE}" get events --sort-by=.lastTimestamp | tail -n 200
