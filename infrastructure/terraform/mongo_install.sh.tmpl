#!/bin/bash
set -euxo pipefail

# Log all output for debug
exec > >(tee /var/log/user_data.log | logger -t user-data -s 2>/dev/console) 2>&1

# Update package metadata
yum update -y

# Confirm required tools exist (minimal versions are already installed)
command -v curl
command -v gpg2

# Import MongoDB GPG key
curl -fsSL https://pgp.mongodb.com/server-8.0.asc | \
gpg2 --dearmor -o /etc/pki/rpm-gpg/mongodb-org-8.0.gpg

# Add MongoDB repo
cat <<REPO > /etc/yum.repos.d/mongodb-org-8.0.repo
[mongodb-org-8.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/amazon/2023/mongodb-org/8.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/mongodb-org-8.0.gpg
REPO

# Install MongoDB
dnf install -y mongodb-org

# Prepare persistent EBS volume
DEVICE="/dev/xvdf"
MOUNT_POINT="/data/db"

# Format only if no filesystem exists
if ! blkid "$DEVICE"; then
  echo "Formatting $DEVICE as XFS..."
  mkfs.xfs "$DEVICE"
else
  echo "$DEVICE already has a filesystem, skipping format."
fi

# Create and mount the directory
mkdir -p "$MOUNT_POINT"
mount "$DEVICE" "$MOUNT_POINT"

# Persist the mount in fstab
if ! grep -qs "$MOUNT_POINT" /etc/fstab; then
  echo "$DEVICE $MOUNT_POINT xfs defaults,nofail 0 2" >> /etc/fstab
fi

# Set proper ownership for MongoDB
chown -R mongod:mongod "$MOUNT_POINT"

# Change settings
sed -i 's/^  bindIp:.*$/  bindIp: 0.0.0.0/' /etc/mongod.conf
sed -i 's|dbPath: /var/lib/mongo|dbPath: /data/db|' /etc/mongod.conf

# Enable and start mongod
systemctl enable mongod
systemctl start mongod

# Wait a bit for Mongo to come up
sleep 10

# Create admin user
#mongosh admin --eval "db.createUser({ user: '${admin_mongo_user}', pwd: '${admin_mongo_password}', roles:[{role:'root', db:'admin'}] })"
mongosh admin --eval "db.createUser({ user: '${s3_mongo_user}', pwd: '${s3_mongo_password}', roles:[{role:'root', db:'test'}] })"
sed -i 's|#security:|security:\n  authorization: enabled|' /etc/mongod.conf
systemctl restart mongod
