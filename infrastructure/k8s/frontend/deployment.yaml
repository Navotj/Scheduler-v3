apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: nat20
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: frontend
          # CI replaces this image on deploy
          image: REPLACED-BY-CI
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 256Mi
          env:
            - name: api_host
              value: api.nat20scheduling.com
          readinessProbe:
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 20
            failureThreshold: 6
          volumeMounts:
            - name: confd
              mountPath: /etc/nginx/conf.d
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      # Use volumes to make writeable paths for the unprivileged NGINX user (101)
      volumes:
        - name: confd
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
