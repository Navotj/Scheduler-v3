apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: nat20
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      # Pod-level security
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: frontend
          image: 637423477802.dkr.ecr.eu-central-1.amazonaws.com/frontend:${GITHUB_SHA}
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: API_HOST
              value: "api.nat20scheduling.com"
          # Container-level security
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 101
            runAsGroup: 101
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          # (probes, resources, and the emptyDir mounts you already have)
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-run-nginx
              mountPath: /var/run
            - name: var-log-nginx
              mountPath: /var/log/nginx
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-run-nginx
          emptyDir: {}
        - name: var-log-nginx
          emptyDir: {}
