apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: nat20
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: <ECR_URI_REPLACED_BY_CI>/frontend:${GITHUB_SHA}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: API_HOST
              value: "api.nat20scheduling.com"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-run-nginx
              mountPath: /var/run
            - name: var-log-nginx
              mountPath: /var/log/nginx
          startupProbe:
            httpGet:
              path: /index.html
              port: http
            periodSeconds: 3
            timeoutSeconds: 1
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 6
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-run-nginx
          emptyDir: {}
        - name: var-log-nginx
          emptyDir: {}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: frontend
