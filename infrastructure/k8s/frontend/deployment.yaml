apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: nat20
spec:
  selector: { app: frontend }
  ports:
    - name: http
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: nat20
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels: { app: frontend }
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels: { app: frontend }
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector: { matchLabels: { app: frontend } }
      containers:
        - name: nginx
          image: <ECR_URI_REPLACED_BY_CI>/frontend:${GITHUB_SHA}
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 80, name: http }]
          readinessProbe:
            httpGet: { path: /index.html, port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /index.html, port: http }
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests: { cpu: "50m", memory: "128Mi" }
            limits:   { cpu: "250m", memory: "256Mi" }
