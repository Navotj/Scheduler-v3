apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: nat20
spec:
  type: ClusterIP
  selector: { app: mongo }
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: nat20
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels: { app: mongo }
  template:
    metadata:
      labels: { app: mongo }
    spec:
      containers:
        - name: mongo
          image: mongo:8.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: mongo
              containerPort: 27017
          envFrom:
            - secretRef: { name: mongo-root }
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          readinessProbe:
            exec: { command: ["mongosh","--eval","db.adminCommand('ping')"] }
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            exec: { command: ["mongosh","--eval","db.adminCommand('ping')"] }
            initialDelaySeconds: 30
            periodSeconds: 20
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3
        resources:
          requests:
            storage: 20Gi
